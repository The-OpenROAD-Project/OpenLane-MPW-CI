%!PS-Adobe-3.0
%%Title: monitor_function.ps
%%Creator: XCircuit v0.0 rev-1817832939
%%CreationDate: Thu Dec 16 14:18:44 2021
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique 
%%+ font Courier-Bold 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce dup type /nametype eq { pop } if translate 0 0 moveto
	neg rotate dup type /nametype eq not { dup abs currentlinewidth exch
	div setlinewidth } { pop } ifelse dup abs scale clipped 1 and 1 eq
	{/clipped clipped 1 add def} if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup


%%EndSetup

%%Page: monitor1 1
%%PageOrientation: Portrait
%%PageBoundingBox: 0 0 612 792
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1088 736 translate

0.678 1.000 0.184 scb
512 1.000 -896 1184 -896 -544 352 -544 352 1184 4 polygon
sce
(\(cont.\)) {/Helvetica-Oblique cf} (Functional Description ) 
{/Helvetica-Bold cf} 4 16 0.000 0.700 -896 1152 label
1 1.000 -896 1136 352 1136 2 polygon
(GPIO description, continued.) {/Helvetica cf} 2 16 0.000 0.700 -896 1088 label
0 1.000 -848 912 -848 960 176 960 176 912 4 polygon
1 1.000 -816 912 -816 864 2 polygon
1 1.000 -784 912 -784 864 2 polygon
1 1.000 -752 912 -752 864 2 polygon
1 1.000 -720 912 -720 864 2 polygon
1 1.000 -688 912 -688 864 2 polygon
1 1.000 -656 912 -656 864 2 polygon
1 1.000 -624 912 -624 864 2 polygon
1 1.000 -592 912 -592 864 2 polygon
1 1.000 -560 912 -560 864 2 polygon
1 1.000 -528 912 -528 864 2 polygon
1 1.000 -496 912 -496 864 2 polygon
1 1.000 -464 912 -464 864 2 polygon
1 1.000 -432 912 -432 864 2 polygon
1 1.000 -400 912 -400 864 2 polygon
1 1.000 -368 912 -368 864 2 polygon
1 1.000 -304 912 -304 864 2 polygon
1 1.000 -272 912 -272 864 2 polygon
1 1.000 -240 912 -240 864 2 polygon
1 1.000 -208 912 -208 864 2 polygon
1 1.000 -176 912 -176 864 2 polygon
1 1.000 -144 912 -144 864 2 polygon
1 1.000 -112 912 -112 864 2 polygon
1 1.000 -80 912 -80 864 2 polygon
1 1.000 -48 912 -48 864 2 polygon
1 1.000 -16 912 -16 864 2 polygon
1 1.000 16 912 16 864 2 polygon
1 1.000 48 912 48 864 2 polygon
1 1.000 80 912 80 864 2 polygon
1 1.000 112 912 112 864 2 polygon
1 1.000 144 912 144 864 2 polygon
(0) {/Helvetica cf} 2 21 0.000 0.500 160 888 label
0.600 0.600 0.600 scb
(1) {/Helvetica cf} 2 21 0.000 0.500 128 888 label
(2) {/Helvetica cf} 2 21 0.000 0.500 96 888 label
(3) {/Helvetica cf} 2 21 0.000 0.500 64 888 label
(4) {/Helvetica cf} 2 21 0.000 0.500 32 888 label
(5) {/Helvetica cf} 2 21 0.000 0.500 0 888 label
(6) {/Helvetica cf} 2 21 0.000 0.500 -32 888 label
(7) {/Helvetica cf} 2 21 0.000 0.500 -64 888 label
(8) {/Helvetica cf} 2 21 0.000 0.500 -96 888 label
(9) {/Helvetica cf} 2 21 0.000 0.500 -128 888 label
(10) {/Helvetica cf} 2 21 0.000 0.500 -160 888 label
(11) {/Helvetica cf} 2 21 0.000 0.500 -192 888 label
(12) {/Helvetica cf} 2 21 0.000 0.500 -224 888 label
(13) {/Helvetica cf} 2 21 0.000 0.500 -256 888 label
(14) {/Helvetica cf} 2 21 0.000 0.500 -288 888 label
(15) {/Helvetica cf} 2 21 0.000 0.500 -320 888 label
(16) {/Helvetica cf} 2 21 0.000 0.500 -352 888 label
(17) {/Helvetica cf} 2 21 0.000 0.500 -384 888 label
(18) {/Helvetica cf} 2 21 0.000 0.500 -416 888 label
(19) {/Helvetica cf} 2 21 0.000 0.500 -448 888 label
(20) {/Helvetica cf} 2 21 0.000 0.500 -480 888 label
(21) {/Helvetica cf} 2 21 0.000 0.500 -512 888 label
(22) {/Helvetica cf} 2 21 0.000 0.500 -544 888 label
(23) {/Helvetica cf} 2 21 0.000 0.500 -576 888 label
(24) {/Helvetica cf} 2 21 0.000 0.500 -608 888 label
(25) {/Helvetica cf} 2 21 0.000 0.500 -640 888 label
(26) {/Helvetica cf} 2 21 0.000 0.500 -672 888 label
(27) {/Helvetica cf} 2 21 0.000 0.500 -704 888 label
(28) {/Helvetica cf} 2 21 0.000 0.500 -736 888 label
(29) {/Helvetica cf} 2 21 0.000 0.500 -768 888 label
(30) {/Helvetica cf} 2 21 0.000 0.500 -800 888 label
(31) {/Helvetica cf} 2 21 0.000 0.500 -832 888 label
sce
(bit) {/Helvetica cf} 2 20 0.000 0.700 208 896 label
(0x2f000000) {/Courier-Bold cf} 2 16 0.000 0.700 -32 976 label
1 1.000 -80 960 -80 1008 2 polygon
1 1.000 -592 960 -592 1008 2 polygon
1 1.000 -848 1008 -848 960 2 polygon
1 1.000 176 1008 176 960 2 polygon
1 1.000 176 912 176 864 2 polygon
1 1.000 -848 912 -848 864 2 polygon
0.600 0.600 0.600 scb
(0x2f000001) {/Courier-Bold cf} 2 16 360.000 0.700 -288 976 label
(0x2f000002) {/Courier-Bold cf} 2 16 360.000 0.700 -544 976 label
(0x2f000003) {/Courier-Bold cf} 2 16 0.000 0.700 -800 976 label
sce
(address) {/Helvetica cf} 2 17 0.000 0.700 256 976 label
(value) {/Helvetica cf} 2 20 0.000 0.700 208 944 label
(\(undefined, reads zero\)) {/Helvetica cf} 2 17 0.000 0.700 -448 928 label
1 1.000 -848 1008 176 1008 2 polygon
1 1.000 -848 864 176 864 2 polygon
(reg_pll_out_dest) {/Courier-Bold cf} 2 16 0.000 0.700 -432 1024 label
1 1.000 -80 960 -80 912 2 polygon
1 1.000 -336 1008 -336 960 2 polygon
1 1.000 -336 912 -336 864 2 polygon
(PLL clock dest.) {/Helvetica cf} 2 17 0.000 0.700 48 928 label
(according to the following table:) {CR} 
(The low bit of this register directs the output of the core clock to the GPIO channel,) 
{/Helvetica cf} 4 28 0.000 0.700 -848 832 label
( value) {/Helvetica cf} (0x2f000000) {/Courier-Bold cf} (Register byte ) 
{/Helvetica cf} 6 16 0.000 0.700 -800 736 label
(Clock output directed to this channel) {/Helvetica cf} 2 16 0.000 0.700 -352 
736 label
(0) {/Courier-Bold cf} 2 16 0.000 0.700 -560 688 label
(1) {/Courier-Bold cf} 2 16 0.000 0.700 -560 656 label
(\(none\)) {/Helvetica cf} 2 16 0.000 0.700 -256 688 label
1 1.000 -800 720 208 720 2 polygon
1 1.000 -368 768 -368 640 2 polygon
(0) {/Helvetica cf} 2 16 0.000 0.700 -704 688 label
(1) {/Helvetica cf} 2 16 0.000 0.700 -704 656 label
0 1.000 -848 336 -848 384 176 384 176 336 4 polygon
1 1.000 -816 336 -816 288 2 polygon
1 1.000 -784 336 -784 288 2 polygon
1 1.000 -752 336 -752 288 2 polygon
1 1.000 -720 336 -720 288 2 polygon
1 1.000 -688 336 -688 288 2 polygon
1 1.000 -656 336 -656 288 2 polygon
1 1.000 -624 336 -624 288 2 polygon
1 1.000 -592 336 -592 288 2 polygon
1 1.000 -560 336 -560 288 2 polygon
1 1.000 -528 336 -528 288 2 polygon
1 1.000 -496 336 -496 288 2 polygon
1 1.000 -464 336 -464 288 2 polygon
1 1.000 -432 336 -432 288 2 polygon
1 1.000 -400 336 -400 288 2 polygon
1 1.000 -368 336 -368 288 2 polygon
1 1.000 -304 336 -304 288 2 polygon
1 1.000 -272 336 -272 288 2 polygon
1 1.000 -240 336 -240 288 2 polygon
1 1.000 -208 336 -208 288 2 polygon
1 1.000 -176 336 -176 288 2 polygon
1 1.000 -144 336 -144 288 2 polygon
1 1.000 -112 336 -112 288 2 polygon
1 1.000 -80 336 -80 288 2 polygon
1 1.000 -48 336 -48 288 2 polygon
1 1.000 -16 336 -16 288 2 polygon
1 1.000 16 336 16 288 2 polygon
1 1.000 48 336 48 288 2 polygon
1 1.000 80 336 80 288 2 polygon
1 1.000 112 336 112 288 2 polygon
1 1.000 144 336 144 288 2 polygon
(0) {/Helvetica cf} 2 21 0.000 0.500 160 312 label
0.600 0.600 0.600 scb
(1) {/Helvetica cf} 2 21 0.000 0.500 128 312 label
(2) {/Helvetica cf} 2 21 0.000 0.500 96 312 label
(3) {/Helvetica cf} 2 21 0.000 0.500 64 312 label
(4) {/Helvetica cf} 2 21 0.000 0.500 32 312 label
(5) {/Helvetica cf} 2 21 0.000 0.500 0 312 label
(6) {/Helvetica cf} 2 21 0.000 0.500 -32 312 label
(7) {/Helvetica cf} 2 21 0.000 0.500 -64 312 label
(8) {/Helvetica cf} 2 21 0.000 0.500 -96 312 label
(9) {/Helvetica cf} 2 21 0.000 0.500 -128 312 label
(10) {/Helvetica cf} 2 21 0.000 0.500 -160 312 label
(11) {/Helvetica cf} 2 21 0.000 0.500 -192 312 label
(12) {/Helvetica cf} 2 21 0.000 0.500 -224 312 label
(13) {/Helvetica cf} 2 21 0.000 0.500 -256 312 label
(14) {/Helvetica cf} 2 21 0.000 0.500 -288 312 label
(15) {/Helvetica cf} 2 21 0.000 0.500 -320 312 label
(16) {/Helvetica cf} 2 21 0.000 0.500 -352 312 label
(17) {/Helvetica cf} 2 21 0.000 0.500 -384 312 label
(18) {/Helvetica cf} 2 21 0.000 0.500 -416 312 label
(19) {/Helvetica cf} 2 21 0.000 0.500 -448 312 label
(20) {/Helvetica cf} 2 21 0.000 0.500 -480 312 label
(21) {/Helvetica cf} 2 21 0.000 0.500 -512 312 label
(22) {/Helvetica cf} 2 21 0.000 0.500 -544 312 label
(23) {/Helvetica cf} 2 21 0.000 0.500 -576 312 label
(24) {/Helvetica cf} 2 21 0.000 0.500 -608 312 label
(25) {/Helvetica cf} 2 21 0.000 0.500 -640 312 label
(26) {/Helvetica cf} 2 21 0.000 0.500 -672 312 label
(27) {/Helvetica cf} 2 21 0.000 0.500 -704 312 label
(28) {/Helvetica cf} 2 21 0.000 0.500 -736 312 label
(29) {/Helvetica cf} 2 21 0.000 0.500 -768 312 label
(30) {/Helvetica cf} 2 21 0.000 0.500 -800 312 label
(31) {/Helvetica cf} 2 21 0.000 0.500 -832 312 label
sce
(bit) {/Helvetica cf} 2 20 0.000 0.700 208 320 label
(0x2f000004) {/Courier-Bold cf} 2 16 0.000 0.700 -32 400 label
1 1.000 -80 384 -80 432 2 polygon
1 1.000 -592 384 -592 432 2 polygon
1 1.000 -848 432 -848 384 2 polygon
1 1.000 176 432 176 384 2 polygon
1 1.000 176 336 176 288 2 polygon
1 1.000 -848 336 -848 288 2 polygon
0.600 0.600 0.600 scb
(0x2f000005) {/Courier-Bold cf} 2 16 360.000 0.700 -288 400 label
(0x2f000006) {/Courier-Bold cf} 2 16 360.000 0.700 -544 400 label
(0x2f000007) {/Courier-Bold cf} 2 16 0.000 0.700 -800 400 label
sce
(address) {/Helvetica cf} 2 17 0.000 0.700 256 400 label
(value) {/Helvetica cf} 2 20 0.000 0.700 208 368 label
(\(undefined, reads zero\)) {/Helvetica cf} 2 17 0.000 0.700 -448 352 label
1 1.000 -848 432 176 432 2 polygon
1 1.000 -848 288 176 288 2 polygon
(reg_trap_out_dest) {/Courier-Bold cf} 2 16 0.000 0.700 -432 448 label
1 1.000 -80 384 -80 336 2 polygon
1 1.000 -336 432 -336 384 2 polygon
1 1.000 -336 336 -336 288 2 polygon
(trap signal dest.) {/Helvetica cf} 2 17 0.000 0.700 48 352 label
(channel, according to the following table:) {CR} 
(The low bit of this register directs the output of the processor trap signal to the GPIO) 
{/Helvetica cf} 4 28 0.000 0.700 -848 256 label
( value) {/Helvetica cf} (0x2f000004) {/Courier-Bold cf} (Register byte ) 
{/Helvetica cf} 6 16 0.000 0.700 -800 160 label
(Trap signal output directed to this channel) {/Helvetica cf} 2 16 0.000 0.700 
-320 160 label
(0) {/Courier-Bold cf} 2 16 0.000 0.700 -560 112 label
(1) {/Courier-Bold cf} 2 16 0.000 0.700 -560 80 label
(GPIO) {/Helvetica cf} 2 16 0.000 0.700 -320 80 label
(\(none\)) {/Helvetica cf} 2 16 0.000 0.700 -320 112 label
1 1.000 -800 144 208 144 2 polygon
1 1.000 -368 192 -368 64 2 polygon
(0) {/Helvetica cf} 2 16 0.000 0.700 -704 112 label
(1) {/Helvetica cf} 2 16 0.000 0.700 -704 80 label
(Table 5) {/Helvetica-Oblique cf} 2 16 0.000 0.700 -848 1024 label
(Table 6) {/Helvetica-Oblique cf} 2 16 0.000 0.700 -848 448 label
(page 7) {/Helvetica cf} 2 31 0.000 0.700 336 1168 label
(GPIO output.) {CR} (MHz\) may be unable to generate a full swing on the) {qS} 
(80) {/Helvetica cf} (e.g., ) {/Helvetica-Oblique cf} 
(Note that a high rate core clock \() {/Helvetica cf} 10 28 0.000 0.700 -848 
560 label
(Core PLL clock to GPIO out) {/Helvetica cf} 2 16 0.000 0.700 -352 656 label
0 1.000 -864 -192 -864 -144 160 -144 160 -192 4 polygon
1 1.000 -832 -192 -832 -240 2 polygon
1 1.000 -800 -192 -800 -240 2 polygon
1 1.000 -768 -192 -768 -240 2 polygon
1 1.000 -736 -192 -736 -240 2 polygon
1 1.000 -704 -192 -704 -240 2 polygon
1 1.000 -672 -192 -672 -240 2 polygon
1 1.000 -640 -192 -640 -240 2 polygon
1 1.000 -608 -192 -608 -240 2 polygon
1 1.000 -576 -192 -576 -240 2 polygon
1 1.000 -544 -192 -544 -240 2 polygon
1 1.000 -512 -192 -512 -240 2 polygon
1 1.000 -480 -192 -480 -240 2 polygon
1 1.000 -448 -192 -448 -240 2 polygon
1 1.000 -416 -192 -416 -240 2 polygon
1 1.000 -384 -192 -384 -240 2 polygon
1 1.000 -320 -192 -320 -240 2 polygon
1 1.000 -288 -192 -288 -240 2 polygon
1 1.000 -256 -192 -256 -240 2 polygon
1 1.000 -224 -192 -224 -240 2 polygon
1 1.000 -192 -192 -192 -240 2 polygon
1 1.000 -160 -192 -160 -240 2 polygon
1 1.000 -128 -192 -128 -240 2 polygon
1 1.000 -96 -192 -96 -240 2 polygon
1 1.000 -64 -192 -64 -240 2 polygon
1 1.000 -32 -192 -32 -240 2 polygon
1 1.000 0 -192 0 -240 2 polygon
1 1.000 32 -192 32 -240 2 polygon
1 1.000 64 -192 64 -240 2 polygon
1 1.000 96 -192 96 -240 2 polygon
1 1.000 128 -192 128 -240 2 polygon
(0) {/Helvetica cf} 2 21 0.000 0.500 144 -216 label
0.600 0.600 0.600 scb
(1) {/Helvetica cf} 2 21 0.000 0.500 112 -216 label
(2) {/Helvetica cf} 2 21 0.000 0.500 80 -216 label
(3) {/Helvetica cf} 2 21 0.000 0.500 48 -216 label
(4) {/Helvetica cf} 2 21 0.000 0.500 16 -216 label
(5) {/Helvetica cf} 2 21 0.000 0.500 -16 -216 label
(6) {/Helvetica cf} 2 21 0.000 0.500 -48 -216 label
(7) {/Helvetica cf} 2 21 0.000 0.500 -80 -216 label
(8) {/Helvetica cf} 2 21 0.000 0.500 -112 -216 label
(9) {/Helvetica cf} 2 21 0.000 0.500 -144 -216 label
(10) {/Helvetica cf} 2 21 0.000 0.500 -176 -216 label
(11) {/Helvetica cf} 2 21 0.000 0.500 -208 -216 label
(12) {/Helvetica cf} 2 21 0.000 0.500 -240 -216 label
(13) {/Helvetica cf} 2 21 0.000 0.500 -272 -216 label
(14) {/Helvetica cf} 2 21 0.000 0.500 -304 -216 label
(15) {/Helvetica cf} 2 21 0.000 0.500 -336 -216 label
(16) {/Helvetica cf} 2 21 0.000 0.500 -368 -216 label
(17) {/Helvetica cf} 2 21 0.000 0.500 -400 -216 label
(18) {/Helvetica cf} 2 21 0.000 0.500 -432 -216 label
(19) {/Helvetica cf} 2 21 0.000 0.500 -464 -216 label
(20) {/Helvetica cf} 2 21 0.000 0.500 -496 -216 label
(21) {/Helvetica cf} 2 21 0.000 0.500 -528 -216 label
(22) {/Helvetica cf} 2 21 0.000 0.500 -560 -216 label
(23) {/Helvetica cf} 2 21 0.000 0.500 -592 -216 label
(24) {/Helvetica cf} 2 21 0.000 0.500 -624 -216 label
(25) {/Helvetica cf} 2 21 0.000 0.500 -656 -216 label
(26) {/Helvetica cf} 2 21 0.000 0.500 -688 -216 label
(27) {/Helvetica cf} 2 21 0.000 0.500 -720 -216 label
(28) {/Helvetica cf} 2 21 0.000 0.500 -752 -216 label
(29) {/Helvetica cf} 2 21 0.000 0.500 -784 -216 label
(30) {/Helvetica cf} 2 21 0.000 0.500 -816 -216 label
(31) {/Helvetica cf} 2 21 0.000 0.500 -848 -216 label
sce
(bit) {/Helvetica cf} 2 20 0.000 0.700 192 -208 label
(0x2f000008) {/Courier-Bold cf} 2 16 0.000 0.700 -48 -128 label
1 1.000 -96 -144 -96 -96 2 polygon
1 1.000 -608 -144 -608 -96 2 polygon
1 1.000 -864 -96 -864 -144 2 polygon
1 1.000 160 -96 160 -144 2 polygon
1 1.000 160 -192 160 -240 2 polygon
1 1.000 -864 -192 -864 -240 2 polygon
0.600 0.600 0.600 scb
(0x2f000009) {/Courier-Bold cf} 2 16 360.000 0.700 -304 -128 label
(0x2f00000a) {/Courier-Bold cf} 2 16 360.000 0.700 -560 -128 label
(0x2f00000b) {/Courier-Bold cf} 2 16 0.000 0.700 -816 -128 label
sce
(address) {/Helvetica cf} 2 17 0.000 0.700 240 -128 label
(value) {/Helvetica cf} 2 20 0.000 0.700 192 -160 label
(\(undefined, reads zero\)) {/Helvetica cf} 2 17 0.000 0.700 -464 -176 label
1 1.000 -864 -96 160 -96 2 polygon
1 1.000 -864 -240 160 -240 2 polygon
(reg_irq7_source) {/Courier-Bold cf} 2 16 0.000 0.700 -448 -80 label
1 1.000 -96 -144 -96 -192 2 polygon
1 1.000 -352 -96 -352 -144 2 polygon
1 1.000 -352 -192 -352 -240 2 polygon
(IRQ 7 source) {/Helvetica cf} 2 17 0.000 0.700 32 -176 label
(according to the following table:) {CR} 
(The low bit of this register directs the input of the GPIO to the processor\251s IRQ7 channel,) 
{/Helvetica cf} 4 28 0.000 0.700 -864 -272 label
( value) {/Helvetica cf} (0x2f000008) {/Courier-Bold cf} (Register byte ) 
{/Helvetica cf} 6 16 0.000 0.700 -816 -368 label
(This channel directed to IRQ channel 7) {/Helvetica cf} 2 16 0.000 0.700 -336 
-368 label
(00) {/Courier-Bold cf} 2 16 0.000 0.700 -576 -416 label
(01) {/Courier-Bold cf} 2 16 0.000 0.700 -576 -448 label
(GPIO) {/Helvetica cf} 2 16 0.000 0.700 -304 -448 label
(\(none\)) {/Helvetica cf} 2 16 0.000 0.700 -304 -416 label
1 1.000 -816 -384 192 -384 2 polygon
1 1.000 -384 -336 -384 -448 2 polygon
(0) {/Helvetica cf} 2 16 0.000 0.700 -720 -416 label
(1) {/Helvetica cf} 2 16 0.000 0.700 -720 -448 label
(Table 7) {/Helvetica-Oblique cf} 2 16 0.000 0.700 -864 -80 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
